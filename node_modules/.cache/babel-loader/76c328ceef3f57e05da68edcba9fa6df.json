{"ast":null,"code":"var _jsxFileName = \"/home/spx110/Desktop/BAZAR/my-app/src/Component/AutoSuggest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Autosuggest from 'react-autosuggest';\nimport SearchBarAction from '../Store/Action/SearchBarAction';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AutosuggestComp = () => {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  const [selected, setSelected] = useState(\"\");\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const getSuggestionValue = suggestion => {\n    return suggestion.Title;\n  };\n\n  const getSuggestions = value => {\n    // const inputValue = value.trim().toLowerCase();\n    // const inputLength = inputValue.length;\n    // return inputLength === 0\n    //     ? []\n    //     : allItems.filter(\n    //         item => item.Title.toLowerCase().slice(0, inputLength) === inputValue\n    //     );\n    if (value) {\n      return allItems;\n    } else {\n      return [];\n    }\n  };\n\n  const renderSuggestion = suggestionss => /*#__PURE__*/_jsxDEV(Link, {\n    to: `/product-listing-pages/${suggestionss.Title}?category=${suggestionss.categoryData.slug}&searchValue=${suggestionss.Title}`,\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: suggestionss.Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 46\n  }, this);\n\n  console.log();\n\n  const onChange = (event, _ref) => {\n    let {\n      newValue\n    } = _ref;\n    setValue(newValue);\n    SearchBarAction(dispatch, {\n      searchValue: newValue\n    });\n  };\n\n  const allItems = useSelector(state => state.SearchBarReducer.SearchBarData);\n\n  const onKeyPress = e => {\n    if (e.key === 'Enter') {\n      navigate(`/product-listing-pages/${e.target.value}`);\n    }\n  };\n\n  let raw;\n  allItems.map(item => {\n    return raw = {\n      title: item.Title,\n      quant: item.Quantity,\n      id: item._id\n    };\n  });\n  console.log(raw);\n\n  const onSuggestionsFetchRequested = _ref2 => {\n    let {\n      value\n    } = _ref2;\n    setSuggestions(getSuggestions(value));\n  }; // console.log(getSuggestions(value))\n\n\n  const onSuggestionsClearRequested = () => setSuggestions([]);\n\n  const onSuggestionSelected = (event, _ref3) => {\n    let {\n      suggestion\n    } = _ref3;\n    setSelected(suggestion.Title);\n  };\n\n  const inputProps = {\n    placeholder: \"Type a character name\",\n    value,\n    onChange,\n    onKeyPress\n  };\n  return /*#__PURE__*/_jsxDEV(Autosuggest, {\n    suggestions: allItems ? allItems : [],\n    onSuggestionsFetchRequested: onSuggestionsFetchRequested,\n    onSuggestionsClearRequested: onSuggestionsClearRequested,\n    onSuggestionSelected: onSuggestionSelected,\n    getSuggestionValue: getSuggestionValue,\n    renderSuggestion: renderSuggestion,\n    highlightFirstSuggestion: true,\n    inputProps: inputProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AutosuggestComp, \"XMIi9UeotE8j3p/tJrr2q+yYEBM=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n\n_c = AutosuggestComp;\nexport default AutosuggestComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"AutosuggestComp\");","map":{"version":3,"sources":["/home/spx110/Desktop/BAZAR/my-app/src/Component/AutoSuggest.js"],"names":["React","useState","useSelector","Link","useNavigate","Autosuggest","SearchBarAction","useDispatch","AutosuggestComp","value","setValue","suggestions","setSuggestions","selected","setSelected","navigate","dispatch","getSuggestionValue","suggestion","Title","getSuggestions","allItems","renderSuggestion","suggestionss","categoryData","slug","console","log","onChange","event","newValue","searchValue","state","SearchBarReducer","SearchBarData","onKeyPress","e","key","target","raw","map","item","title","quant","Quantity","id","_id","onSuggestionsFetchRequested","onSuggestionsClearRequested","onSuggestionSelected","inputProps","placeholder"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Autosuggest from 'react-autosuggest';\nimport SearchBarAction from '../Store/Action/SearchBarAction'\nimport { useDispatch } from 'react-redux'\n\n\n\n\nconst AutosuggestComp = () => {\n    const [value, setValue] = useState(\"\");\n    const [suggestions, setSuggestions] = useState([]);\n    const [selected, setSelected] = useState(\"\");\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n\n    const getSuggestionValue = (suggestion) => { return suggestion.Title }\n\n    const getSuggestions = value => {\n        // const inputValue = value.trim().toLowerCase();\n        // const inputLength = inputValue.length;\n\n        // return inputLength === 0\n        //     ? []\n        //     : allItems.filter(\n        //         item => item.Title.toLowerCase().slice(0, inputLength) === inputValue\n        //     );\n        if (value) {\n            return allItems\n        }\n        else { return [] }\n    }\n\n\n\n    const renderSuggestion = suggestionss => <Link to={`/product-listing-pages/${suggestionss.Title}?category=${suggestionss.categoryData.slug}&searchValue=${suggestionss.Title}`}\n    > <div>{suggestionss.Title}</div> </Link>;\n    console.log()\n    const onChange = (event, { newValue }) => {\n        setValue(newValue);\n\n        SearchBarAction(dispatch, { searchValue: newValue })\n    };\n    const allItems = useSelector(state => state.SearchBarReducer.SearchBarData)\n    const onKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            navigate(`/product-listing-pages/${e.target.value}`)\n        }\n    }\n    let raw;\n    allItems.map((item) => {\n        return raw = {\n            title: item.Title,\n            quant: item.Quantity,\n            id: item._id\n        }\n    })\n    console.log(raw)\n    const onSuggestionsFetchRequested = ({ value }) => {\n        setSuggestions(getSuggestions(value));\n    };\n    // console.log(getSuggestions(value))\n    const onSuggestionsClearRequested = () => setSuggestions([]);\n\n    const onSuggestionSelected = (event, { suggestion }) => {\n\n        setSelected(suggestion.Title);\n    };\n\n    const inputProps = {\n        placeholder: \"Type a character name\",\n        value,\n        onChange,\n        onKeyPress\n    };\n    return (\n        <Autosuggest\n            suggestions={allItems ? allItems : []}\n            onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n            onSuggestionsClearRequested={onSuggestionsClearRequested}\n            onSuggestionSelected={onSuggestionSelected}\n            getSuggestionValue={getSuggestionValue}\n            renderSuggestion={renderSuggestion}\n            highlightFirstSuggestion={true}\n            inputProps={inputProps}\n        />\n    )\n}\n\nexport default AutosuggestComp;"]},"metadata":{},"sourceType":"module"}