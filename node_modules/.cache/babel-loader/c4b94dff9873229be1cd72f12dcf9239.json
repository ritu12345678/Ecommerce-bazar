{"ast":null,"code":"var _jsxFileName = \"/home/spx110/Desktop/BAZAR/my-app/src/Component/Auto1.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport AutoSuggest from \"react-autosuggest\";\nimport SearchBarAction from '../Store/Action/SearchBarAction';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Auto = () => {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  const dispatch = useDispatch();\n\n  function getSuggestions(value) {\n    return lowerCasedCompanies.filter(company => company.name.includes(value.trim().toLowerCase()));\n  }\n\n  const allItems = useSelector(state => state.SearchBarReducer.SearchBarData);\n  const lowerCasedCompanies = allItems.map(item => {\n    return {\n      id: item._id,\n      Title: item.Title.toLowerCase()\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AutoSuggest, {\n      suggestions: suggestions,\n      onSuggestionsClearRequested: () => setSuggestions([]),\n      onSuggestionsFetchRequested: _ref => {\n        let {\n          value\n        } = _ref;\n        console.log(value);\n        setValue(value);\n        setSuggestions(getSuggestions(value));\n      },\n      onSuggestionSelected: (_, _ref2) => {\n        let {\n          suggestionValue\n        } = _ref2;\n        return console.log(\"Selected: \" + suggestionValue);\n      },\n      getSuggestionValue: suggestion => suggestion.name,\n      renderSuggestion: suggestion => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: suggestion.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 49\n      }, this),\n      inputProps: {\n        placeholder: \"Type 'c'\",\n        value: value,\n        onChange: (_, _ref3) => {\n          let {\n            newValue,\n            method\n          } = _ref3;\n          setValue(newValue);\n          SearchBarAction(dispatch, {\n            searchValue: newValue\n          });\n        }\n      },\n      highlightFirstSuggestion: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auto, \"cAdkGcEXqTSlxoIaRGCFu/g7E60=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Auto;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auto\");","map":{"version":3,"sources":["/home/spx110/Desktop/BAZAR/my-app/src/Component/Auto1.js"],"names":["React","useState","ReactDOM","AutoSuggest","SearchBarAction","useDispatch","useNavigate","useSelector","Auto","value","setValue","suggestions","setSuggestions","dispatch","getSuggestions","lowerCasedCompanies","filter","company","name","includes","trim","toLowerCase","allItems","state","SearchBarReducer","SearchBarData","map","item","id","_id","Title","console","log","_","suggestionValue","suggestion","placeholder","onChange","newValue","method","searchValue"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAIA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMY,QAAQ,GAAGR,WAAW,EAA5B;;AAEA,WAASS,cAAT,CAAwBL,KAAxB,EAA+B;AAC3B,WAAOM,mBAAmB,CAACC,MAApB,CAA2BC,OAAO,IACrCA,OAAO,CAACC,IAAR,CAAaC,QAAb,CAAsBV,KAAK,CAACW,IAAN,GAAaC,WAAb,EAAtB,CADG,CAAP;AAGH;;AACD,QAAMC,QAAQ,GAAGf,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACC,gBAAN,CAAuBC,aAAjC,CAA5B;AACA,QAAMV,mBAAmB,GAAGO,QAAQ,CAACI,GAAT,CAAaC,IAAI,IAAI;AAC7C,WAAO;AACHC,MAAAA,EAAE,EAAED,IAAI,CAACE,GADN;AAEHC,MAAAA,KAAK,EAAEH,IAAI,CAACG,KAAL,CAAWT,WAAX;AAFJ,KAAP;AAIH,GAL2B,CAA5B;AAMA,sBACI;AAAA,2BACI,QAAC,WAAD;AACI,MAAA,WAAW,EAAEV,WADjB;AAEI,MAAA,2BAA2B,EAAE,MAAMC,cAAc,CAAC,EAAD,CAFrD;AAGI,MAAA,2BAA2B,EAAE,QAAe;AAAA,YAAd;AAAEH,UAAAA;AAAF,SAAc;AACxCsB,QAAAA,OAAO,CAACC,GAAR,CAAYvB,KAAZ;AACAC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,QAAAA,cAAc,CAACE,cAAc,CAACL,KAAD,CAAf,CAAd;AACH,OAPL;AAQI,MAAA,oBAAoB,EAAE,CAACwB,CAAD;AAAA,YAAI;AAAEC,UAAAA;AAAF,SAAJ;AAAA,eAClBH,OAAO,CAACC,GAAR,CAAY,eAAeE,eAA3B,CADkB;AAAA,OAR1B;AAWI,MAAA,kBAAkB,EAAEC,UAAU,IAAIA,UAAU,CAACjB,IAXjD;AAYI,MAAA,gBAAgB,EAAEiB,UAAU,iBAAI;AAAA,kBAAOA,UAAU,CAACjB;AAAlB;AAAA;AAAA;AAAA;AAAA,cAZpC;AAaI,MAAA,UAAU,EAAE;AACRkB,QAAAA,WAAW,EAAE,UADL;AAER3B,QAAAA,KAAK,EAAEA,KAFC;AAGR4B,QAAAA,QAAQ,EAAE,CAACJ,CAAD,YAA6B;AAAA,cAAzB;AAAEK,YAAAA,QAAF;AAAYC,YAAAA;AAAZ,WAAyB;AACnC7B,UAAAA,QAAQ,CAAC4B,QAAD,CAAR;AACAlC,UAAAA,eAAe,CAACS,QAAD,EAAW;AAAE2B,YAAAA,WAAW,EAAEF;AAAf,WAAX,CAAf;AACH;AANO,OAbhB;AAqBI,MAAA,wBAAwB,EAAE;AArB9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CA5CM;;GAAM9B,I;UAGQH,W,EAOAE,W;;;KAVRC,I","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport AutoSuggest from \"react-autosuggest\";\nimport SearchBarAction from '../Store/Action/SearchBarAction'\nimport { useDispatch } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\nimport { useSelector } from 'react-redux';\n\n\n\nexport const Auto = () => {\n    const [value, setValue] = useState(\"\");\n    const [suggestions, setSuggestions] = useState([]);\n    const dispatch = useDispatch()\n\n    function getSuggestions(value) {\n        return lowerCasedCompanies.filter(company =>\n            company.name.includes(value.trim().toLowerCase())\n        );\n    }\n    const allItems = useSelector(state => state.SearchBarReducer.SearchBarData)\n    const lowerCasedCompanies = allItems.map(item => {\n        return {\n            id: item._id,\n            Title: item.Title.toLowerCase()\n        };\n    });\n    return (\n        <div>\n            <AutoSuggest\n                suggestions={suggestions}\n                onSuggestionsClearRequested={() => setSuggestions([])}\n                onSuggestionsFetchRequested={({ value }) => {\n                    console.log(value);\n                    setValue(value);\n                    setSuggestions(getSuggestions(value));\n                }}\n                onSuggestionSelected={(_, { suggestionValue }) =>\n                    console.log(\"Selected: \" + suggestionValue)\n                }\n                getSuggestionValue={suggestion => suggestion.name}\n                renderSuggestion={suggestion => <span>{suggestion.name}</span>}\n                inputProps={{\n                    placeholder: \"Type 'c'\",\n                    value: value,\n                    onChange: (_, { newValue, method }) => {\n                        setValue(newValue);\n                        SearchBarAction(dispatch, { searchValue: newValue })\n                    }\n                }}\n                highlightFirstSuggestion={true}\n            />\n        </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}