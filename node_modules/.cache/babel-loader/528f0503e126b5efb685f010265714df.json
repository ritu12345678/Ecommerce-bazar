{"ast":null,"code":"var _jsxFileName = \"/home/spx110/Desktop/BAZAR/my-app/src/Component/AutoSuggest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Autosuggest from 'react-autosuggest'; // const allItems = [{\n//     name: 'ritu'\n// },\n// {\n//     name: 'sharma'\n// }]\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AutosuggestComp = () => {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  const [selected, setSelected] = useState(\"\");\n  const allItems = useSelector(state => state.SearchBarReducer.SearchBarData);\n\n  const getSuggestionValue = suggestion => suggestion.name;\n\n  const getSuggestions = value => {\n    const inputValue = value.trim().toLowerCase();\n    const inputLength = inputValue.length;\n    return inputLength === 0 ? [] : allItems.filter(item => item.T.toLowerCase().slice(0, inputLength) === inputValue);\n  };\n\n  const renderSuggestion = suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: suggestion.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 44\n  }, this);\n\n  const onChange = (event, _ref) => {\n    let {\n      newValue\n    } = _ref;\n    setValue(newValue);\n  };\n\n  const onSuggestionsFetchRequested = _ref2 => {\n    let {\n      value\n    } = _ref2;\n    setSuggestions(getSuggestions(value));\n  };\n\n  const onSuggestionsClearRequested = () => setSuggestions([]);\n\n  const onSuggestionSelected = (event, _ref3) => {\n    let {\n      suggestion\n    } = _ref3;\n    setSelected(suggestion.name);\n  };\n\n  const inputProps = {\n    placeholder: \"Type a character name\",\n    value,\n    onChange\n  };\n  return /*#__PURE__*/_jsxDEV(Autosuggest, {\n    suggestions: suggestions,\n    onSuggestionsFetchRequested: onSuggestionsFetchRequested,\n    onSuggestionsClearRequested: onSuggestionsClearRequested,\n    onSuggestionSelected: onSuggestionSelected,\n    getSuggestionValue: getSuggestionValue,\n    renderSuggestion: renderSuggestion,\n    inputProps: inputProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AutosuggestComp, \"3nKQKUTMPEJ3TSiktiUw/2y5PUw=\", false, function () {\n  return [useSelector];\n});\n\n_c = AutosuggestComp;\nexport default AutosuggestComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"AutosuggestComp\");","map":{"version":3,"sources":["/home/spx110/Desktop/BAZAR/my-app/src/Component/AutoSuggest.js"],"names":["React","useState","useSelector","Autosuggest","AutosuggestComp","value","setValue","suggestions","setSuggestions","selected","setSelected","allItems","state","SearchBarReducer","SearchBarData","getSuggestionValue","suggestion","name","getSuggestions","inputValue","trim","toLowerCase","inputLength","length","filter","item","T","slice","renderSuggestion","onChange","event","newValue","onSuggestionsFetchRequested","onSuggestionsClearRequested","onSuggestionSelected","inputProps","placeholder"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,WAAP,MAAwB,mBAAxB,C,CAGA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMU,QAAQ,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,gBAAN,CAAuBC,aAAjC,CAA5B;;AAEA,QAAMC,kBAAkB,GAAGC,UAAU,IAAIA,UAAU,CAACC,IAApD;;AAEA,QAAMC,cAAc,GAAGb,KAAK,IAAI;AAC5B,UAAMc,UAAU,GAAGd,KAAK,CAACe,IAAN,GAAaC,WAAb,EAAnB;AACA,UAAMC,WAAW,GAAGH,UAAU,CAACI,MAA/B;AAEA,WAAOD,WAAW,KAAK,CAAhB,GACD,EADC,GAEDX,QAAQ,CAACa,MAAT,CACEC,IAAI,IAAIA,IAAI,CAACC,CAAL,CAAOL,WAAP,GAAqBM,KAArB,CAA2B,CAA3B,EAA8BL,WAA9B,MAA+CH,UADzD,CAFN;AAKH,GATD;;AAWA,QAAMS,gBAAgB,GAAGZ,UAAU,iBAAI;AAAA,cAAMA,UAAU,CAACC;AAAjB;AAAA;AAAA;AAAA;AAAA,UAAvC;;AAEA,QAAMY,QAAQ,GAAG,CAACC,KAAD,WAAyB;AAAA,QAAjB;AAAEC,MAAAA;AAAF,KAAiB;AACtCzB,IAAAA,QAAQ,CAACyB,QAAD,CAAR;AACH,GAFD;;AAIA,QAAMC,2BAA2B,GAAG,SAAe;AAAA,QAAd;AAAE3B,MAAAA;AAAF,KAAc;AAC/CG,IAAAA,cAAc,CAACU,cAAc,CAACb,KAAD,CAAf,CAAd;AACH,GAFD;;AAIA,QAAM4B,2BAA2B,GAAG,MAAMzB,cAAc,CAAC,EAAD,CAAxD;;AAEA,QAAM0B,oBAAoB,GAAG,CAACJ,KAAD,YAA2B;AAAA,QAAnB;AAAEd,MAAAA;AAAF,KAAmB;AACpDN,IAAAA,WAAW,CAACM,UAAU,CAACC,IAAZ,CAAX;AACH,GAFD;;AAIA,QAAMkB,UAAU,GAAG;AACfC,IAAAA,WAAW,EAAE,uBADE;AAEf/B,IAAAA,KAFe;AAGfwB,IAAAA;AAHe,GAAnB;AAKA,sBACI,QAAC,WAAD;AACI,IAAA,WAAW,EAAEtB,WADjB;AAEI,IAAA,2BAA2B,EAAEyB,2BAFjC;AAGI,IAAA,2BAA2B,EAAEC,2BAHjC;AAII,IAAA,oBAAoB,EAAEC,oBAJ1B;AAKI,IAAA,kBAAkB,EAAEnB,kBALxB;AAMI,IAAA,gBAAgB,EAAEa,gBANtB;AAOI,IAAA,UAAU,EAAEO;AAPhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAnDD;;GAAM/B,e;UAIeF,W;;;KAJfE,e;AAqDN,eAAeA,eAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Autosuggest from 'react-autosuggest';\n\n\n// const allItems = [{\n//     name: 'ritu'\n// },\n// {\n//     name: 'sharma'\n// }]\n\nconst AutosuggestComp = () => {\n    const [value, setValue] = useState(\"\");\n    const [suggestions, setSuggestions] = useState([]);\n    const [selected, setSelected] = useState(\"\");\n    const allItems = useSelector(state => state.SearchBarReducer.SearchBarData)\n\n    const getSuggestionValue = suggestion => suggestion.name;\n\n    const getSuggestions = value => {\n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n\n        return inputLength === 0\n            ? []\n            : allItems.filter(\n                item => item.T.toLowerCase().slice(0, inputLength) === inputValue\n            );\n    };\n\n    const renderSuggestion = suggestion => <div>{suggestion.name}</div>;\n\n    const onChange = (event, { newValue }) => {\n        setValue(newValue);\n    };\n\n    const onSuggestionsFetchRequested = ({ value }) => {\n        setSuggestions(getSuggestions(value));\n    };\n\n    const onSuggestionsClearRequested = () => setSuggestions([]);\n\n    const onSuggestionSelected = (event, { suggestion }) => {\n        setSelected(suggestion.name);\n    };\n\n    const inputProps = {\n        placeholder: \"Type a character name\",\n        value,\n        onChange\n    };\n    return (\n        <Autosuggest\n            suggestions={suggestions}\n            onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n            onSuggestionsClearRequested={onSuggestionsClearRequested}\n            onSuggestionSelected={onSuggestionSelected}\n            getSuggestionValue={getSuggestionValue}\n            renderSuggestion={renderSuggestion}\n            inputProps={inputProps}\n        />\n    )\n}\n\nexport default AutosuggestComp;"]},"metadata":{},"sourceType":"module"}